(function(exports){"use strict";(function(Blending){Blending[Blending["Over"]=0]="Over";Blending[Blending["Add"]=1]="Add";Blending[Blending["Subtract"]=2]="Subtract";Blending[Blending["Multiply"]=3]="Multiply"})(exports.Blending||(exports.Blending={}));const _lut=[];for(let i=0;i<256;i++){_lut[i]=(i<16?"0":"")+i.toString(16)}function generateUUID(){const d0=Math.random()*4294967296|0;const d1=Math.random()*4294967296|0;const d2=Math.random()*4294967296|0;const d3=Math.random()*4294967296|0;const uuid=_lut[d0&255]+_lut[d0>>8&255]+_lut[d0>>16&255]+_lut[d0>>24&255]+"-"+_lut[d1&255]+_lut[d1>>8&255]+"-"+_lut[d1>>16&15|64]+_lut[d1>>24&255]+"-"+_lut[d2&63|128]+_lut[d2>>8&255]+"-"+_lut[d2>>16&255]+_lut[d2>>24&255]+_lut[d3&255]+_lut[d3>>8&255]+_lut[d3>>16&255]+_lut[d3>>24&255];return uuid.toUpperCase()}class Material{constructor(){this.disposed=false;this.uuid=generateUUID();this.version=0;this.name=""}dirty(){this.version++}dispose(){if(!this.disposed){this.disposed=true;this.dirty()}}}(function(OutputChannels){OutputChannels[OutputChannels["Beauty"]=0]="Beauty";OutputChannels[OutputChannels["Albedo"]=1]="Albedo";OutputChannels[OutputChannels["Roughness"]=2]="Roughness";OutputChannels[OutputChannels["Metalness"]=3]="Metalness";OutputChannels[OutputChannels["Occlusion"]=4]="Occlusion";OutputChannels[OutputChannels["Emissive"]=5]="Emissive";OutputChannels[OutputChannels["Normal"]=6]="Normal";OutputChannels[OutputChannels["Depth"]=7]="Depth";OutputChannels[OutputChannels["Ambient"]=8]="Ambient";OutputChannels[OutputChannels["Diffuse"]=9]="Diffuse";OutputChannels[OutputChannels["Specular"]=10]="Specular";OutputChannels[OutputChannels["DepthPacked"]=11]="DepthPacked";OutputChannels[OutputChannels["MetalnessRoughnessOcclusion"]=12]="MetalnessRoughnessOcclusion"})(exports.OutputChannels||(exports.OutputChannels={}));const arrayBuffer=new ArrayBuffer(12*16);const floatArray=new Float32Array(arrayBuffer);const intArray=new Int32Array(arrayBuffer);function hashFloat2(v0,v1){floatArray[0]=v0;floatArray[1]=v1;const hash=intArray[0];return hash*397^intArray[1]}function hashFloat3(v0,v1,v2){floatArray[0]=v0;floatArray[1]=v1;floatArray[2]=v2;let hash=intArray[0]|0;hash=hash*397^(intArray[1]|0);return hash*397^(intArray[2]|0)}function hashFloatArray(elements){for(let i=0;i<elements.length;i++){floatArray[i]=elements[i]}let hash=intArray[0]|0;for(let i=1;i<16;i++){hash=hash*397^(intArray[i]|0)}return hash}function clamp(value,min,max){return Math.min(Math.max(value,min),max)}class Vector3{constructor(x=0,y=0,z=0){this.x=x;this.y=y;this.z=z}get width(){return this.x}set width(width){this.x=width}get height(){return this.y}set height(height){this.y=height}get depth(){return this.z}set depth(depth){this.z=depth}get r(){return this.x}set r(r){this.x=r}get g(){return this.y}set g(g){this.y=g}get b(){return this.z}set b(b){this.z=b}getHashCode(){return hashFloat3(this.x,this.y,this.z)}set(x,y,z){this.x=x;this.y=y;this.z=z;return this}clone(){return(new Vector3).copy(this)}copy(v){return this.set(v.x,v.y,v.z)}add(v){this.x+=v.x;this.y+=v.y;this.z+=v.z;return this}addScalar(s){this.x+=s;this.y+=s;this.z+=s;return this}sub(v){this.x-=v.x;this.y-=v.y;this.z-=v.z;return this}multiplyByScalar(s){this.x*=s;this.y*=s;this.z*=s;return this}negate(){this.x*=-1;this.y*=-1;this.z*=-1;return this}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this}normalize(){const length=this.length();return this.multiplyByScalar(length===0?1:1/length)}getComponent(index){if(index===0){return this.x}else if(index===1){return this.y}else if(index===2){return this.z}else{throw new Error(`index of our range: ${index}`)}}setComponent(index,value){if(index===0){this.x=value}else if(index===1){this.y=value}else if(index===2){this.z=value}else{throw new Error(`index of our range: ${index}`)}return this}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z}cross(v){const ax=this.x,ay=this.y,az=this.z;const bx=v.x,by=v.y,bz=v.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this}length(){return Math.sqrt(this.lengthSquared())}lengthSquared(){return this.x*this.x+this.y*this.y+this.z*this.z}distanceToSquared(v){const dx=this.x-v.x;const dy=this.y-v.y;const dz=this.z-v.z;return dx*dx+dy*dy+dz*dz}distanceTo(v){return Math.sqrt(this.distanceToSquared(v))}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this}clamp(min,max){this.x=clamp(this.x,min.x,max.x);this.y=clamp(this.y,min.y,max.y);this.z=clamp(this.z,min.z,max.z);return this}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z}setFromArray(array,offset){this.x=array[offset+0];this.y=array[offset+1];this.z=array[offset+2]}toArray(array,offset){array[offset+0]=this.x;array[offset+1]=this.y;array[offset+2]=this.z}}class Matrix3{constructor(){this.elements=[1,0,0,0,1,0,0,0,1]}getHashCode(){return hashFloatArray(this.elements)}set(n11,n12,n13,n21,n22,n23,n31,n32,n33){const te=this.elements;te[0]=n11;te[1]=n21;te[2]=n31;te[3]=n12;te[4]=n22;te[5]=n32;te[6]=n13;te[7]=n23;te[8]=n33;return this}clone(){return(new Matrix3).copy(this)}copy(m){const te=this.elements;const me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];return this}getComponent(index){return this.elements[index]}setComponent(index,value){this.elements[index]=value;return this}multiplyByScalar(s){const te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this}makeIdentity(){this.set(1,0,0,0,1,0,0,0,1);return this}equals(m){for(let i=0;i<16;i++){if(m.elements[i]!==this.elements[i]){return false}}return true}setFromArray(floatArray,offset){for(let i=0;i<this.elements.length;i++){this.elements[i]=floatArray[offset+i]}}toArray(floatArray,offset){for(let i=0;i<this.elements.length;i++){floatArray[offset+i]=this.elements[i]}}}function makeMatrix3Concatenation(a,b,result=new Matrix3){const ae=a.elements;const be=b.elements;const te=result.elements;const a11=ae[0],a12=ae[3],a13=ae[6];const a21=ae[1],a22=ae[4],a23=ae[7];const a31=ae[2],a32=ae[5],a33=ae[8];const b11=be[0],b12=be[3],b13=be[6];const b21=be[1],b22=be[4],b23=be[7];const b31=be[2],b32=be[5],b33=be[8];te[0]=a11*b11+a12*b21+a13*b31;te[3]=a11*b12+a12*b22+a13*b32;te[6]=a11*b13+a12*b23+a13*b33;te[1]=a21*b11+a22*b21+a23*b31;te[4]=a21*b12+a22*b22+a23*b32;te[7]=a21*b13+a22*b23+a23*b33;te[2]=a31*b11+a32*b21+a33*b31;te[5]=a31*b12+a32*b22+a33*b32;te[8]=a31*b13+a32*b23+a33*b33;return result}function makeMatrix3Translation(t,result=new Matrix3){return result.set(1,0,t.x,0,1,t.y,0,0,1)}function makeMatrix3RotationFromAngle(angle,result=new Matrix3){const c=Math.cos(angle);const s=Math.sin(angle);return result.set(c,-s,0,s,c,0,0,0,1)}function makeMatrix3Scale(s,result=new Matrix3){return result.set(s.x,0,0,0,s.y,0,0,0,1)}class Vector2{constructor(x=0,y=0){this.x=x;this.y=y}get width(){return this.x}set width(width){this.x=width}get height(){return this.y}set height(height){this.y=height}getHashCode(){return hashFloat2(this.x,this.y)}set(x,y){this.x=x;this.y=y;return this}clone(){return(new Vector2).copy(this)}copy(v){return this.set(v.x,v.y)}add(v){this.x+=v.x;this.y+=v.y;return this}addScalar(s){this.x+=s;this.y+=s;return this}sub(v){this.x-=v.x;this.y-=v.y;return this}multiplyByScalar(s){this.x*=s;this.y*=s;return this}negate(){this.x*=-1;this.y*=-1;return this}normalize(){const length=this.length();return this.multiplyByScalar(length===0?1:0)}getComponent(index){if(index===0){return this.x}else if(index===1){return this.y}else{throw new Error(`index of our range: ${index}`)}}setComponent(index,value){if(index===0){this.x=value}else if(index===1){this.y=value}else{throw new Error(`index of our range: ${index}`)}return this}dot(v){return this.x*v.x+this.y*v.y}length(){return Math.sqrt(this.lengthSquared())}lengthSquared(){return this.x*this.x+this.y*this.y}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);return this}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this}clamp(min,max){this.x=clamp(this.x,min.x,max.x);this.y=clamp(this.y,min.y,max.y);return this}equals(v){return v.x===this.x&&v.y===this.y}setFromArray(array,offset){this.x=array[offset+0];this.y=array[offset+1]}toArray(array,offset){array[offset+0]=this.x;array[offset+1]=this.y}}var __classPrivateFieldGet=undefined&&undefined.__classPrivateFieldGet||function(receiver,privateMap){if(!privateMap.has(receiver)){throw new TypeError("attempted to get private field on non-instance")}return privateMap.get(receiver)};var __classPrivateFieldSet=undefined&&undefined.__classPrivateFieldSet||function(receiver,privateMap,value){if(!privateMap.has(receiver)){throw new TypeError("attempted to set private field on non-instance")}privateMap.set(receiver,value);return value};var _uvTransform,_uvTransformVersion;class TextureAccessor{constructor(texture=undefined,uvIndex=0,uvScale=new Vector2(1,1),uvRotation=0,uvTranslation=new Vector2){this.texture=texture;this.uvIndex=uvIndex;this.uvScale=uvScale;this.uvRotation=uvRotation;this.uvTranslation=uvTranslation;this.version=0;_uvTransform.set(this,new Matrix3);_uvTransformVersion.set(this,-1)}get uvTransform(){if(__classPrivateFieldGet(this,_uvTransformVersion)<this.version){__classPrivateFieldSet(this,_uvTransform,makeMatrix3Translation(this.uvTranslation,__classPrivateFieldGet(this,_uvTransform)));__classPrivateFieldSet(this,_uvTransform,makeMatrix3Concatenation(__classPrivateFieldGet(this,_uvTransform),makeMatrix3RotationFromAngle(this.uvRotation),__classPrivateFieldGet(this,_uvTransform)));__classPrivateFieldSet(this,_uvTransform,makeMatrix3Concatenation(__classPrivateFieldGet(this,_uvTransform),makeMatrix3Scale(this.uvScale),__classPrivateFieldGet(this,_uvTransform)));__classPrivateFieldSet(this,_uvTransformVersion,this.version)}return __classPrivateFieldGet(this,_uvTransform)}dirty(){this.version++}}_uvTransform=new WeakMap,_uvTransformVersion=new WeakMap;class PhysicalMaterial extends Material{constructor(){super(...arguments);this.version=0;this.albedo=new Vector3(1,1,1);this.albedoMap=new TextureAccessor;this.roughness=.5;this.roughnessMap=new TextureAccessor;this.metalness=0;this.metalnessMap=new TextureAccessor;this.emissive=new Vector3(1,1,1);this.emissiveMap=new TextureAccessor;this.normalFactor=1;this.normalMap=new TextureAccessor;this.blendMode=exports.Blending.Over;this.outputs=exports.OutputChannels.Beauty}dirty(){this.version++}}class ShaderMaterial{constructor(vertexShaderCode,fragmentShaderCode,glslVersion=200){this.vertexShaderCode=vertexShaderCode;this.fragmentShaderCode=fragmentShaderCode;this.glslVersion=glslVersion;this.uuid=generateUUID();this.version=0;this.disposed=false;this.name=""}dirty(){this.version++}dispose(){this.disposed=true;this.dirty()}}exports.Material=Material;exports.PhysicalMaterial=PhysicalMaterial;exports.ShaderMaterial=ShaderMaterial;return exports})({});