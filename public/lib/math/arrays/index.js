(function(exports){"use strict";function normalizedByteToFloats(sourceArray,result=undefined){const scale=1/255;if(result===undefined){result=new Float32Array(sourceArray.length)}for(let i=0;i<sourceArray.length;i++){result[i]=sourceArray[i]*scale}return result}function floatsToNormalizedBytes(sourceArray,result=undefined){const scale=255;if(result===undefined){result=new Uint8Array(sourceArray.length)}for(let i=0;i<sourceArray.length;i++){result[i]=sourceArray[i]*scale}return result}function linearizeNumberInt32Array(array){const result=new Int32Array(array.length);for(let i=0;i<array.length;i++){result[i]=array[i]}return result}function linearizeNumberFloatArray(array){const result=new Float32Array(array.length);for(let i=0;i<array.length;i++){result[i]=array[i]}return result}function linearizeVector2FloatArray(array){const result=new Float32Array(array.length*2);for(let i=0;i<array.length;i++){array[i].toArray(result,i*2)}return result}function linearizeVector3FloatArray(array){const result=new Float32Array(array.length*3);for(let i=0;i<array.length;i++){array[i].toArray(result,i*3)}return result}function linearizeQuaternionFloatArray(array){const result=new Float32Array(array.length*4);for(let i=0;i<array.length;i++){array[i].toArray(result,i*4)}return result}function linearizeMatrix3FloatArray(array){const result=new Float32Array(array.length*9);for(let i=0;i<array.length;i++){array[i].toArray(result,i*9)}return result}function linearizeMatrix4FloatArray(array){const result=new Float32Array(array.length*16);for(let i=0;i<array.length;i++){array[i].toArray(result,i*16)}return result}const GL=WebGLRenderingContext;var ComponentType;(function(ComponentType){ComponentType[ComponentType["Byte"]=GL.BYTE]="Byte";ComponentType[ComponentType["UnsignedByte"]=GL.UNSIGNED_BYTE]="UnsignedByte";ComponentType[ComponentType["Short"]=GL.SHORT]="Short";ComponentType[ComponentType["UnsignedShort"]=GL.UNSIGNED_SHORT]="UnsignedShort";ComponentType[ComponentType["Int"]=GL.INT]="Int";ComponentType[ComponentType["UnsignedInt"]=GL.UNSIGNED_INT]="UnsignedInt";ComponentType[ComponentType["Float"]=GL.FLOAT]="Float"})(ComponentType||(ComponentType={}));function componentTypeSizeOf(componentType){switch(componentType){case ComponentType.Byte:case ComponentType.UnsignedByte:return 1;case ComponentType.Short:case ComponentType.UnsignedShort:return 2;case ComponentType.Float:case ComponentType.Int:case ComponentType.UnsignedInt:return 4}throw new Error(`unsupported component type: ${componentType}`)}const _lut=[];for(let i=0;i<256;i++){_lut[i]=(i<16?"0":"")+i.toString(16)}var BufferTarget;(function(BufferTarget){BufferTarget[BufferTarget["Array"]=GL.ARRAY_BUFFER]="Array";BufferTarget[BufferTarget["ElementArray"]=GL.ELEMENT_ARRAY_BUFFER]="ElementArray"})(BufferTarget||(BufferTarget={}));class Attribute{constructor(attributeData,componentsPerVertex,componentType,vertexStride,byteOffset,normalized){this.attributeData=attributeData;this.componentsPerVertex=componentsPerVertex;this.componentType=componentType;this.vertexStride=vertexStride;this.byteOffset=byteOffset;this.normalized=normalized;this.bytesPerComponent=componentTypeSizeOf(this.componentType);this.bytesPerVertex=this.bytesPerComponent*this.componentsPerVertex;if(this.vertexStride<0){this.vertexStride=this.bytesPerVertex}this.count=this.attributeData.arrayBuffer.byteLength/this.vertexStride}}const arrayBuffer=new ArrayBuffer(12*16);const floatArray=new Float32Array(arrayBuffer);const intArray=new Int32Array(arrayBuffer);function hashFloat2(v0,v1){floatArray[0]=v0;floatArray[1]=v1;const hash=intArray[0];return hash*397^intArray[1]}function hashFloat3(v0,v1,v2){floatArray[0]=v0;floatArray[1]=v1;floatArray[2]=v2;let hash=intArray[0]|0;hash=hash*397^(intArray[1]|0);return hash*397^(intArray[2]|0)}function clamp(value,min,max){return Math.min(Math.max(value,min),max)}class Vector2{constructor(x=0,y=0){this.x=x;this.y=y}get width(){return this.x}set width(width){this.x=width}get height(){return this.y}set height(height){this.y=height}getHashCode(){return hashFloat2(this.x,this.y)}set(x,y){this.x=x;this.y=y;return this}clone(){return(new Vector2).copy(this)}copy(v){return this.set(v.x,v.y)}add(v){this.x+=v.x;this.y+=v.y;return this}addScalar(s){this.x+=s;this.y+=s;return this}sub(v){this.x-=v.x;this.y-=v.y;return this}multiplyByScalar(s){this.x*=s;this.y*=s;return this}negate(){this.x*=-1;this.y*=-1;return this}normalize(){const length=this.length();return this.multiplyByScalar(length===0?1:0)}getComponent(index){if(index===0){return this.x}else if(index===1){return this.y}else{throw new Error(`index of our range: ${index}`)}}setComponent(index,value){if(index===0){this.x=value}else if(index===1){this.y=value}else{throw new Error(`index of our range: ${index}`)}return this}dot(v){return this.x*v.x+this.y*v.y}length(){return Math.sqrt(this.lengthSquared())}lengthSquared(){return this.x*this.x+this.y*this.y}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);return this}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this}clamp(min,max){this.x=clamp(this.x,min.x,max.x);this.y=clamp(this.y,min.y,max.y);return this}equals(v){return v.x===this.x&&v.y===this.y}setFromArray(array,offset){this.x=array[offset+0];this.y=array[offset+1]}toArray(array,offset){array[offset+0]=this.x;array[offset+1]=this.y}}class Vector3{constructor(x=0,y=0,z=0){this.x=x;this.y=y;this.z=z}get width(){return this.x}set width(width){this.x=width}get height(){return this.y}set height(height){this.y=height}get depth(){return this.z}set depth(depth){this.z=depth}get r(){return this.x}set r(r){this.x=r}get g(){return this.y}set g(g){this.y=g}get b(){return this.z}set b(b){this.z=b}getHashCode(){return hashFloat3(this.x,this.y,this.z)}set(x,y,z){this.x=x;this.y=y;this.z=z;return this}clone(){return(new Vector3).copy(this)}copy(v){return this.set(v.x,v.y,v.z)}add(v){this.x+=v.x;this.y+=v.y;this.z+=v.z;return this}addScalar(s){this.x+=s;this.y+=s;this.z+=s;return this}sub(v){this.x-=v.x;this.y-=v.y;this.z-=v.z;return this}multiplyByScalar(s){this.x*=s;this.y*=s;this.z*=s;return this}negate(){this.x*=-1;this.y*=-1;this.z*=-1;return this}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this}normalize(){const length=this.length();return this.multiplyByScalar(length===0?1:1/length)}getComponent(index){if(index===0){return this.x}else if(index===1){return this.y}else if(index===2){return this.z}else{throw new Error(`index of our range: ${index}`)}}setComponent(index,value){if(index===0){this.x=value}else if(index===1){this.y=value}else if(index===2){this.z=value}else{throw new Error(`index of our range: ${index}`)}return this}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z}cross(v){const ax=this.x,ay=this.y,az=this.z;const bx=v.x,by=v.y,bz=v.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this}length(){return Math.sqrt(this.lengthSquared())}lengthSquared(){return this.x*this.x+this.y*this.y+this.z*this.z}distanceToSquared(v){const dx=this.x-v.x;const dy=this.y-v.y;const dz=this.z-v.z;return dx*dx+dy*dy+dz*dz}distanceTo(v){return Math.sqrt(this.distanceToSquared(v))}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this}clamp(min,max){this.x=clamp(this.x,min.x,max.x);this.y=clamp(this.y,min.y,max.y);this.z=clamp(this.z,min.z,max.z);return this}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z}setFromArray(array,offset){this.x=array[offset+0];this.y=array[offset+1];this.z=array[offset+2]}toArray(array,offset){array[offset+0]=this.x;array[offset+1]=this.y;array[offset+2]=this.z}}class PrimitiveView{constructor(dataArray,floatPerPrimitive=-1,floatStride=-1,floatOffset=-1){this.floatStride=floatStride;this.floatOffset=floatOffset;if(dataArray instanceof Attribute){if(this.floatStride>=0){throw new Error("can not specify explicit byteStride when using Attribute argument")}if(this.floatOffset>=0){throw new Error("can not specify explicit byteOffset when using Attribute argument")}this.floatOffset=dataArray.byteOffset/4;this.floatStride=dataArray.vertexStride/4;this.floatArray=new Float32Array(dataArray.attributeData.arrayBuffer)}else if(dataArray instanceof Float32Array){this.floatArray=dataArray}else if(dataArray instanceof ArrayBuffer){this.floatArray=new Float32Array(dataArray)}else{throw new Error("unsupported value")}if(floatPerPrimitive<0){throw new Error("must specify bytesPerPrimitive or provide an Attribute argument")}if(this.floatStride<0){this.floatStride=floatPerPrimitive}if(this.floatOffset<0){this.floatOffset=0}this.count=this.floatArray.length/this.floatStride}set(index,v){v.toArray(this.floatArray,index*this.floatStride+this.floatOffset);return this}get(index,v){v.setFromArray(this.floatArray,index*this.floatStride+this.floatOffset);return v}}class Vector2View extends PrimitiveView{constructor(dataArray,floatStride=-1,floatOffset=-1){super(dataArray,2,floatStride,floatOffset);this.tempPrimitive=new Vector2}add(index,v){return this.set(index,this.get(index,this.tempPrimitive).add(v))}}class Vector3View extends PrimitiveView{constructor(dataArray,floatStride=-1,floatOffset=-1){super(dataArray,3,floatStride,floatOffset);this.tempPrimitive=new Vector3}add(index,v){return this.set(index,this.get(index,this.tempPrimitive).add(v))}}function makeVector2View(dataArray,floatStride=-1,floatOffset=-1){return new Vector2View(dataArray,floatStride,floatOffset)}function makeVector3View(dataArray,floatStride=-1,floatOffset=-1){return new Vector3View(dataArray,floatStride,floatOffset)}function makeQuaternionView(dataArray,floatStride=-1,floatOffset=-1){return new PrimitiveView(dataArray,4,floatStride,floatOffset)}function makeMatrix3View(dataArray,floatStride=-1,floatOffset=-1){return new PrimitiveView(dataArray,9,floatStride,floatOffset)}function makeMatrix4View(dataArray,floatStride=-1,floatOffset=-1){return new PrimitiveView(dataArray,16,floatStride,floatOffset)}exports.PrimitiveView=PrimitiveView;exports.Vector2View=Vector2View;exports.Vector3View=Vector3View;exports.floatsToNormalizedBytes=floatsToNormalizedBytes;exports.linearizeMatrix3FloatArray=linearizeMatrix3FloatArray;exports.linearizeMatrix4FloatArray=linearizeMatrix4FloatArray;exports.linearizeNumberFloatArray=linearizeNumberFloatArray;exports.linearizeNumberInt32Array=linearizeNumberInt32Array;exports.linearizeQuaternionFloatArray=linearizeQuaternionFloatArray;exports.linearizeVector2FloatArray=linearizeVector2FloatArray;exports.linearizeVector3FloatArray=linearizeVector3FloatArray;exports.makeMatrix3View=makeMatrix3View;exports.makeMatrix4View=makeMatrix4View;exports.makeQuaternionView=makeQuaternionView;exports.makeVector2View=makeVector2View;exports.makeVector3View=makeVector3View;exports.normalizedByteToFloats=normalizedByteToFloats;return exports})({});