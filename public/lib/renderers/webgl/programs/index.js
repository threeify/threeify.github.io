(function(exports){"use strict";class UserResource{constructor(user,resource){this.user=user;this.resource=resource;this.resourceVersion=-1}update(context,updater){let disposed=false;if(this.resourceVersion<this.user.version){if(this.user.disposed){this.resource.dispose();disposed=true}else{this.resource=updater(context,this.user,this.resource)}this.resourceVersion=this.user.version}return disposed}}class Pool{constructor(context,updater){this.context=context;this.updater=updater;this.userResources=[]}request(user){let userResource=this.userResources.find(userResource=>userResource.user.uuid===user.uuid);if(userResource===undefined){userResource=new UserResource(user,this.updater(this.context,user,undefined));this.userResources.push(userResource)}return userResource.resource}update(){let disposeCount=0;this.userResources.forEach(userResource=>{if(userResource.update(this.context,this.updater)){disposeCount++}});if(disposeCount>0){this.garbageCollect()}return this}garbageCollect(){this.userResources=this.userResources.filter(userResource=>!userResource.resource.disposed);return this}}const GL=WebGLRenderingContext;var BufferTarget;(function(BufferTarget){BufferTarget[BufferTarget["Array"]=GL.ARRAY_BUFFER]="Array";BufferTarget[BufferTarget["ElementArray"]=GL.ELEMENT_ARRAY_BUFFER]="ElementArray"})(BufferTarget||(BufferTarget={}));var BufferUsage;(function(BufferUsage){BufferUsage[BufferUsage["StaticDraw"]=GL.STATIC_DRAW]="StaticDraw";BufferUsage[BufferUsage["DynamicDraw"]=GL.DYNAMIC_DRAW]="DynamicDraw"})(BufferUsage||(BufferUsage={}));var PrimitiveType;(function(PrimitiveType){PrimitiveType[PrimitiveType["Points"]=GL.POINTS]="Points";PrimitiveType[PrimitiveType["Lines"]=GL.LINES]="Lines";PrimitiveType[PrimitiveType["LineStrip"]=GL.LINE_STRIP]="LineStrip";PrimitiveType[PrimitiveType["Triangles"]=GL.TRIANGLES]="Triangles";PrimitiveType[PrimitiveType["TriangleFan"]=GL.TRIANGLE_FAN]="TriangleFan";PrimitiveType[PrimitiveType["TriangleStrip"]=GL.TRIANGLE_STRIP]="TriangleStrip"})(PrimitiveType||(PrimitiveType={}));class BufferGeometry{constructor(context){this.context=context;this.disposed=false;this.bufferAccessors={};this.indices=undefined;this.primitive=PrimitiveType.Triangles;this.count=-1}dispose(){console.warn("This is not safe.  The buffers may be used by multiple bufferViews & bufferGeometries.");if(!this.disposed){for(const name in this.bufferAccessors){const bufferAccessor=this.bufferAccessors[name];if(bufferAccessor!==undefined){bufferAccessor.buffer.dispose()}}if(this.indices!==undefined){this.indices.buffer.dispose()}this.disposed=true}}}var ShaderType;(function(ShaderType){ShaderType[ShaderType["Fragment"]=GL.FRAGMENT_SHADER]="Fragment";ShaderType[ShaderType["Vertex"]=GL.VERTEX_SHADER]="Vertex"})(ShaderType||(ShaderType={}));var __classPrivateFieldGet=undefined&&undefined.__classPrivateFieldGet||function(receiver,privateMap){if(!privateMap.has(receiver)){throw new TypeError("attempted to get private field on non-instance")}return privateMap.get(receiver)};var __classPrivateFieldSet=undefined&&undefined.__classPrivateFieldSet||function(receiver,privateMap,value){if(!privateMap.has(receiver)){throw new TypeError("attempted to set private field on non-instance")}privateMap.set(receiver,value);return value};var _validated;function insertLineNumbers(source){const inputLines=source.split("\n");const outputLines=["\n"];const maxLineCharacters=Math.floor(Math.log10(inputLines.length));for(let l=0;l<inputLines.length;l++){const lAsString=`000000${l+1}`.slice(-maxLineCharacters-1);outputLines.push(`${lAsString}: ${inputLines[l]}`)}return outputLines.join("\n")}function removeDeadCode(source){const defineRegexp=/^#define +([\w\d_]+)/;const undefRegexp=/^#undef +([\w\d_]+)/;const ifdefRegexp=/^#ifdef +([\w\d_]+)/;const ifndefRegexp=/^#ifndef +([\w\d_]+)/;const endifRegexp=/^#endif.* /;let defines=[];const liveCodeStack=[true];const outputLines=[];source.split("\n").forEach(line=>{const isLive=liveCodeStack[liveCodeStack.length-1];if(isLive){const defineMatch=line.match(defineRegexp);if(defineMatch!==null){defines.push(defineMatch[1])}const undefMatch=line.match(undefRegexp);if(undefMatch!==null){const indexOfDefine=defines.indexOf(undefMatch[1]);if(indexOfDefine>=0){defines=defines.splice(indexOfDefine,1)}}const ifdefMatch=line.match(ifdefRegexp);if(ifdefMatch!==null){liveCodeStack.push(defines.indexOf(ifdefMatch[1])>=0);return}const ifndefMatch=line.match(ifndefRegexp);if(ifndefMatch!==null){liveCodeStack.push(defines.indexOf(ifndefMatch[1])<0);return}}const endifMatch=line.match(endifRegexp);if(endifMatch!==null){liveCodeStack.pop();return}if(isLive){outputLines.push(line)}});return outputLines.join("\n").replace(/\/\*[\s\S]*?\*\/|([^\\:]|^)\/\/.*$/gm,"").replace(/[\r\n]+/g,"\n")}class Shader{constructor(context,source,shaderType,glslVersion=300){this.context=context;this.source=source;this.shaderType=shaderType;this.glslVersion=glslVersion;this.disposed=false;_validated.set(this,false);const gl=this.context.gl;{const glShader=gl.createShader(shaderType);if(glShader===null){throw new Error("createShader failed")}this.glShader=glShader}const prefix=[];if(glslVersion===300){prefix.push("#version 300 es")}if(shaderType===ShaderType.Fragment){const glxo=context.glxo;if(glxo.EXT_shader_texture_lod!==null){prefix.push("#extension GL_EXT_shader_texture_lod : enable")}prefix.push("#extension GL_OES_standard_derivatives : enable")}const combinedSource=prefix.join("\n")+"\n"+source;this.finalSource=removeDeadCode(combinedSource);gl.shaderSource(this.glShader,this.finalSource);gl.compileShader(this.glShader);this.id=this.context.registerResource(this)}get translatedSource(){const ds=this.context.glxo.WEBGL_debug_shaders;if(ds!==null){return ds.getTranslatedShaderSource(this.glShader)}return""}validate(){if(__classPrivateFieldGet(this,_validated)||this.disposed){return}const gl=this.context.gl;const compileStatus=gl.getShaderParameter(this.glShader,GL.COMPILE_STATUS);if(!compileStatus){const infoLog=gl.getShaderInfoLog(this.glShader);const errorMessage=`could not compile shader:\n${infoLog}`;console.error(errorMessage);console.error(insertLineNumbers(this.finalSource));this.disposed=true;throw new Error(errorMessage)}__classPrivateFieldSet(this,_validated,true)}dispose(){if(!this.disposed){this.context.gl.deleteShader(this.glShader);this.context.disposeResource(this);this.disposed=true}}}_validated=new WeakMap;class VertexArrayObject{constructor(program,bufferGeometry){this.program=program;this.disposed=false;this.primitive=PrimitiveType.Triangles;this.offset=0;this.count=-1;this.primitive=bufferGeometry.primitive;this.count=bufferGeometry.count;const glxVAO=this.program.context.glx.OES_vertex_array_object;{const vao=glxVAO.createVertexArrayOES();if(vao===null){throw new Error("createVertexArray failed")}this.glVertexArrayObject=vao}glxVAO.bindVertexArrayOES(this.glVertexArrayObject);program.setAttributeBuffers(bufferGeometry);this.id=this.program.context.registerResource(this)}dispose(){if(!this.disposed){const glxVAO=this.program.context.glx.OES_vertex_array_object;glxVAO.deleteVertexArrayOES(this.glVertexArrayObject);this.program.context.disposeResource(this);this.disposed=true}}}class ProgramAttribute{constructor(program,index){this.program=program;this.index=index;this.name=name;const gl=program.context.gl;{const activeInfo=gl.getActiveAttrib(program.glProgram,index);if(activeInfo===null){throw new Error(`can not find attribute with index: ${index}`)}this.name=activeInfo.name;this.size=activeInfo.size;this.type=activeInfo.type;const glLocation=gl.getAttribLocation(program.glProgram,this.name);if(glLocation<0){throw new Error(`can not find attribute named: ${this.name}`)}this.glLocation=glLocation}}setBuffer(bufferAccessor){const gl=this.program.context.gl;gl.enableVertexAttribArray(this.glLocation);gl.bindBuffer(GL.ARRAY_BUFFER,bufferAccessor.buffer.glBuffer);gl.vertexAttribPointer(this.glLocation,bufferAccessor.componentsPerVertex,bufferAccessor.componentType,bufferAccessor.normalized,bufferAccessor.vertexStride,bufferAccessor.byteOffset);return this}}function linearizeVector2FloatArray(array){const result=new Float32Array(array.length*2);for(let i=0;i<array.length;i++){array[i].toArray(result,i*2)}return result}function linearizeVector3FloatArray(array){const result=new Float32Array(array.length*3);for(let i=0;i<array.length;i++){array[i].toArray(result,i*3)}return result}function linearizeMatrix3FloatArray(array){const result=new Float32Array(array.length*9);for(let i=0;i<array.length;i++){array[i].toArray(result,i*9)}return result}function linearizeMatrix4FloatArray(array){const result=new Float32Array(array.length*16);for(let i=0;i<array.length;i++){array[i].toArray(result,i*16)}return result}const arrayBuffer=new ArrayBuffer(12*16);const floatArray=new Float32Array(arrayBuffer);const intArray=new Int32Array(arrayBuffer);function hashFloat2(v0,v1){floatArray[0]=v0;floatArray[1]=v1;const hash=intArray[0];return hash*397^intArray[1]}function hashFloat3(v0,v1,v2){floatArray[0]=v0;floatArray[1]=v1;floatArray[2]=v2;let hash=intArray[0]|0;hash=hash*397^(intArray[1]|0);return hash*397^(intArray[2]|0)}function hashFloatArray(elements){for(let i=0;i<elements.length;i++){floatArray[i]=elements[i]}let hash=intArray[0]|0;for(let i=1;i<16;i++){hash=hash*397^(intArray[i]|0)}return hash}class Matrix3{constructor(){this.elements=[1,0,0,0,1,0,0,0,1]}getHashCode(){return hashFloatArray(this.elements)}set(n11,n12,n13,n21,n22,n23,n31,n32,n33){const te=this.elements;te[0]=n11;te[1]=n21;te[2]=n31;te[3]=n12;te[4]=n22;te[5]=n32;te[6]=n13;te[7]=n23;te[8]=n33;return this}clone(){return(new Matrix3).copy(this)}copy(m){const te=this.elements;const me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];return this}getComponent(index){return this.elements[index]}setComponent(index,value){this.elements[index]=value;return this}multiplyByScalar(s){const te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this}makeIdentity(){this.set(1,0,0,0,1,0,0,0,1);return this}equals(m){for(let i=0;i<16;i++){if(m.elements[i]!==this.elements[i]){return false}}return true}setFromArray(floatArray,offset){for(let i=0;i<this.elements.length;i++){this.elements[i]=floatArray[offset+i]}}toArray(floatArray,offset){for(let i=0;i<this.elements.length;i++){floatArray[offset+i]=this.elements[i]}}}class Matrix4{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}getHashCode(){return hashFloatArray(this.elements)}set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){const te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this}clone(){return(new Matrix4).copy(this)}copy(m){const me=m.elements;return this.set(me[0],me[4],me[8],me[12],me[1],me[5],me[9],me[13],me[2],me[6],me[10],me[14],me[3],me[7],me[11],me[15])}getComponent(index){return this.elements[index]}setComponent(index,value){this.elements[index]=value;return this}multiplyByScalar(s){const te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this}makeIdentity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)}equals(m){for(let i=0;i<16;i++){if(m.elements[i]!==this.elements[i]){return false}}return true}setFromArray(array,offset){for(let i=0;i<this.elements.length;i++){this.elements[i]=array[offset+i]}}toArray(array,offset){for(let i=0;i<this.elements.length;i++){array[offset+i]=this.elements[i]}}}function clamp(value,min,max){return Math.min(Math.max(value,min),max)}function isPow2(value){return(value&value-1)===0&&value!==0}class Vector2{constructor(x=0,y=0){this.x=x;this.y=y}get width(){return this.x}set width(width){this.x=width}get height(){return this.y}set height(height){this.y=height}getHashCode(){return hashFloat2(this.x,this.y)}set(x,y){this.x=x;this.y=y;return this}clone(){return(new Vector2).copy(this)}copy(v){return this.set(v.x,v.y)}add(v){this.x+=v.x;this.y+=v.y;return this}addScalar(s){this.x+=s;this.y+=s;return this}sub(v){this.x-=v.x;this.y-=v.y;return this}multiplyByScalar(s){this.x*=s;this.y*=s;return this}negate(){this.x*=-1;this.y*=-1;return this}normalize(){const length=this.length();return this.multiplyByScalar(length===0?1:0)}getComponent(index){if(index===0){return this.x}else if(index===1){return this.y}else{throw new Error(`index of our range: ${index}`)}}setComponent(index,value){if(index===0){this.x=value}else if(index===1){this.y=value}else{throw new Error(`index of our range: ${index}`)}return this}dot(v){return this.x*v.x+this.y*v.y}length(){return Math.sqrt(this.lengthSquared())}lengthSquared(){return this.x*this.x+this.y*this.y}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);return this}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this}clamp(min,max){this.x=clamp(this.x,min.x,max.x);this.y=clamp(this.y,min.y,max.y);return this}equals(v){return v.x===this.x&&v.y===this.y}setFromArray(array,offset){this.x=array[offset+0];this.y=array[offset+1]}toArray(array,offset){array[offset+0]=this.x;array[offset+1]=this.y}}class Vector3{constructor(x=0,y=0,z=0){this.x=x;this.y=y;this.z=z}get width(){return this.x}set width(width){this.x=width}get height(){return this.y}set height(height){this.y=height}get depth(){return this.z}set depth(depth){this.z=depth}get r(){return this.x}set r(r){this.x=r}get g(){return this.y}set g(g){this.y=g}get b(){return this.z}set b(b){this.z=b}getHashCode(){return hashFloat3(this.x,this.y,this.z)}set(x,y,z){this.x=x;this.y=y;this.z=z;return this}clone(){return(new Vector3).copy(this)}copy(v){return this.set(v.x,v.y,v.z)}add(v){this.x+=v.x;this.y+=v.y;this.z+=v.z;return this}addScalar(s){this.x+=s;this.y+=s;this.z+=s;return this}sub(v){this.x-=v.x;this.y-=v.y;this.z-=v.z;return this}multiplyByScalar(s){this.x*=s;this.y*=s;this.z*=s;return this}negate(){this.x*=-1;this.y*=-1;this.z*=-1;return this}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this}normalize(){const length=this.length();return this.multiplyByScalar(length===0?1:1/length)}getComponent(index){if(index===0){return this.x}else if(index===1){return this.y}else if(index===2){return this.z}else{throw new Error(`index of our range: ${index}`)}}setComponent(index,value){if(index===0){this.x=value}else if(index===1){this.y=value}else if(index===2){this.z=value}else{throw new Error(`index of our range: ${index}`)}return this}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z}cross(v){const ax=this.x,ay=this.y,az=this.z;const bx=v.x,by=v.y,bz=v.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this}length(){return Math.sqrt(this.lengthSquared())}lengthSquared(){return this.x*this.x+this.y*this.y+this.z*this.z}distanceToSquared(v){const dx=this.x-v.x;const dy=this.y-v.y;const dz=this.z-v.z;return dx*dx+dy*dy+dz*dz}distanceTo(v){return Math.sqrt(this.distanceToSquared(v))}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this}clamp(min,max){this.x=clamp(this.x,min.x,max.x);this.y=clamp(this.y,min.y,max.y);this.z=clamp(this.z,min.z,max.z);return this}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z}setFromArray(array,offset){this.x=array[offset+0];this.y=array[offset+1];this.z=array[offset+2]}toArray(array,offset){array[offset+0]=this.x;array[offset+1]=this.y;array[offset+2]=this.z}}var DataType;(function(DataType){DataType[DataType["Byte"]=GL.BYTE]="Byte";DataType[DataType["UnsignedByte"]=GL.UNSIGNED_BYTE]="UnsignedByte";DataType[DataType["Short"]=GL.SHORT]="Short";DataType[DataType["UnsignedShort"]=GL.UNSIGNED_SHORT]="UnsignedShort";DataType[DataType["Int"]=GL.INT]="Int";DataType[DataType["UnsignedInt"]=GL.UNSIGNED_INT]="UnsignedInt";DataType[DataType["Float"]=GL.FLOAT]="Float"})(DataType||(DataType={}));var PixelEncoding;(function(PixelEncoding){PixelEncoding[PixelEncoding["Linear"]=0]="Linear";PixelEncoding[PixelEncoding["sRGB"]=1]="sRGB";PixelEncoding[PixelEncoding["RGBE"]=2]="RGBE";PixelEncoding[PixelEncoding["RGBD"]=3]="RGBD"})(PixelEncoding||(PixelEncoding={}));class ArrayBufferImage{constructor(data,width,height,dataType=DataType.UnsignedByte,pixelEncoding=PixelEncoding.sRGB){this.data=data;this.width=width;this.height=height;this.dataType=dataType;this.pixelEncoding=pixelEncoding}}var PixelFormat;(function(PixelFormat){PixelFormat[PixelFormat["RGBA"]=GL.RGBA]="RGBA";PixelFormat[PixelFormat["RGB"]=GL.RGB]="RGB";PixelFormat[PixelFormat["LuminanceAlpha"]=GL.LUMINANCE_ALPHA]="LuminanceAlpha";PixelFormat[PixelFormat["Luminance"]=GL.LUMINANCE]="Luminance";PixelFormat[PixelFormat["Alpha"]=GL.ALPHA]="Alpha";PixelFormat[PixelFormat["DepthComponent"]=GL.DEPTH_COMPONENT]="DepthComponent";PixelFormat[PixelFormat["DepthStencil"]=GL.DEPTH_STENCIL]="DepthStencil"})(PixelFormat||(PixelFormat={}));var TextureFilter;(function(TextureFilter){TextureFilter[TextureFilter["LinearMipmapLinear"]=GL.LINEAR_MIPMAP_LINEAR]="LinearMipmapLinear";TextureFilter[TextureFilter["LinearMipmapNearest"]=GL.LINEAR_MIPMAP_NEAREST]="LinearMipmapNearest";TextureFilter[TextureFilter["Linear"]=GL.LINEAR]="Linear";TextureFilter[TextureFilter["Nearest"]=GL.NEAREST]="Nearest";TextureFilter[TextureFilter["NearestMipmapLinear"]=GL.NEAREST_MIPMAP_LINEAR]="NearestMipmapLinear";TextureFilter[TextureFilter["NearestMipmapNearest"]=GL.NEAREST_MIPMAP_NEAREST]="NearestMipmapNearest"})(TextureFilter||(TextureFilter={}));var TextureWrap;(function(TextureWrap){TextureWrap[TextureWrap["MirroredRepeat"]=GL.MIRRORED_REPEAT]="MirroredRepeat";TextureWrap[TextureWrap["ClampToEdge"]=GL.CLAMP_TO_EDGE]="ClampToEdge";TextureWrap[TextureWrap["Repeat"]=GL.REPEAT]="Repeat"})(TextureWrap||(TextureWrap={}));class TexParameters{constructor(){this.generateMipmaps=true;this.wrapS=TextureWrap.Repeat;this.wrapT=TextureWrap.Repeat;this.magFilter=TextureFilter.Linear;this.minFilter=TextureFilter.LinearMipmapLinear;this.anisotropyLevels=2}}var TextureTarget;(function(TextureTarget){TextureTarget[TextureTarget["Texture2D"]=GL.TEXTURE_2D]="Texture2D";TextureTarget[TextureTarget["TextureCubeMap"]=GL.TEXTURE_CUBE_MAP]="TextureCubeMap";TextureTarget[TextureTarget["CubeMapPositiveX"]=GL.TEXTURE_CUBE_MAP_POSITIVE_X]="CubeMapPositiveX";TextureTarget[TextureTarget["CubeMapNegativeX"]=GL.TEXTURE_CUBE_MAP_NEGATIVE_X]="CubeMapNegativeX";TextureTarget[TextureTarget["CubeMapPositiveY"]=GL.TEXTURE_CUBE_MAP_POSITIVE_Y]="CubeMapPositiveY";TextureTarget[TextureTarget["CubeMapNegativeY"]=GL.TEXTURE_CUBE_MAP_NEGATIVE_Y]="CubeMapNegativeY";TextureTarget[TextureTarget["CubeMapPositiveZ"]=GL.TEXTURE_CUBE_MAP_POSITIVE_Z]="CubeMapPositiveZ";TextureTarget[TextureTarget["CubeMapNegativeZ"]=GL.TEXTURE_CUBE_MAP_NEGATIVE_Z]="CubeMapNegativeZ"})(TextureTarget||(TextureTarget={}));class TexImage2D{constructor(context,images,internalFormat=PixelFormat.RGBA,dataType=DataType.UnsignedByte,pixelFormat=PixelFormat.RGBA,target=TextureTarget.Texture2D,texParameters=new TexParameters){this.context=context;this.images=images;this.internalFormat=internalFormat;this.dataType=dataType;this.pixelFormat=pixelFormat;this.target=target;this.texParameters=texParameters;this.disposed=false;this.size=new Vector2;const gl=this.context.gl;{const glTexture=gl.createTexture();if(glTexture===null){throw new Error("createTexture failed")}this.glTexture=glTexture}this.loadImages(images);gl.texParameteri(this.target,GL.TEXTURE_WRAP_S,texParameters.wrapS);gl.texParameteri(this.target,GL.TEXTURE_WRAP_T,texParameters.wrapS);gl.texParameteri(this.target,GL.TEXTURE_MAG_FILTER,texParameters.magFilter);gl.texParameteri(this.target,GL.TEXTURE_MIN_FILTER,texParameters.minFilter);if(texParameters.anisotropyLevels>1){const tfa=this.context.glxo.EXT_texture_filter_anisotropic;if(tfa!==null){const maxAllowableAnisotropy=gl.getParameter(tfa.MAX_TEXTURE_MAX_ANISOTROPY_EXT);gl.texParameterf(this.target,tfa.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texParameters.anisotropyLevels,maxAllowableAnisotropy))}}if(texParameters.generateMipmaps){if(isPow2(this.size.width)&&isPow2(this.size.height)){gl.generateMipmap(this.target)}}gl.bindTexture(this.target,null);this.id=this.context.registerResource(this)}generateMipmaps(){const gl=this.context.gl;gl.bindTexture(this.target,this.glTexture);gl.generateMipmap(this.target);gl.bindTexture(this.target,null);this.texParameters.generateMipmaps=true}get mipCount(){if(!this.texParameters.generateMipmaps){return 1}return Math.floor(Math.log2(Math.max(this.size.width,this.size.height)))}dispose(){if(!this.disposed){this.context.gl.deleteTexture(this.glTexture);this.context.disposeResource(this);this.disposed=true}}loadImages(images){const gl=this.context.gl;gl.bindTexture(this.target,this.glTexture);if(images.length===1){this.loadImage(images[0])}else if(this.target===TextureTarget.TextureCubeMap){const numLevels=Math.floor(this.images.length/6);for(let level=0;level<numLevels;level++){for(let face=0;face<6;face++){const imageIndex=level*6+face;const image=images[imageIndex];this.loadImage(image,TextureTarget.CubeMapPositiveX+face,level)}}}else{throw new Error("Unsupported number of images")}}loadImage(image,target=undefined,level=0){const gl=this.context.gl;if(image instanceof Vector2){gl.texImage2D(target!==null&&target!==void 0?target:this.target,level,this.internalFormat,image.width,image.height,0,this.pixelFormat,this.dataType,null);if(level===0){this.size.set(image.width,image.height)}}else if(image instanceof ArrayBufferImage){gl.texImage2D(target!==null&&target!==void 0?target:this.target,level,this.internalFormat,image.width,image.height,0,this.pixelFormat,this.dataType,new Uint8Array(image.data));if(level===0){this.size.set(image.width,image.height)}}else{gl.texImage2D(target!==null&&target!==void 0?target:this.target,level,this.internalFormat,this.pixelFormat,this.dataType,image);this.size.set(image.width,image.height)}}}(function(UniformType){UniformType[UniformType["Bool"]=GL.BOOL]="Bool";UniformType[UniformType["BoolVec2"]=GL.BOOL_VEC2]="BoolVec2";UniformType[UniformType["BoolVec3"]=GL.BOOL_VEC3]="BoolVec3";UniformType[UniformType["BoolVec4"]=GL.BOOL_VEC4]="BoolVec4";UniformType[UniformType["Int"]=GL.INT]="Int";UniformType[UniformType["IntVec2"]=GL.INT_VEC2]="IntVec2";UniformType[UniformType["IntVec3"]=GL.INT_VEC3]="IntVec3";UniformType[UniformType["IntVec4"]=GL.INT_VEC4]="IntVec4";UniformType[UniformType["Float"]=GL.FLOAT]="Float";UniformType[UniformType["FloatVec2"]=GL.FLOAT_VEC2]="FloatVec2";UniformType[UniformType["FloatVec3"]=GL.FLOAT_VEC3]="FloatVec3";UniformType[UniformType["FloatVec4"]=GL.FLOAT_VEC4]="FloatVec4";UniformType[UniformType["FloatMat2"]=GL.FLOAT_MAT2]="FloatMat2";UniformType[UniformType["FloatMat3"]=GL.FLOAT_MAT3]="FloatMat3";UniformType[UniformType["FloatMat4"]=GL.FLOAT_MAT4]="FloatMat4";UniformType[UniformType["Sampler2D"]=GL.SAMPLER_2D]="Sampler2D";UniformType[UniformType["SamplerCube"]=GL.SAMPLER_CUBE]="SamplerCube"})(exports.UniformType||(exports.UniformType={}));function numTextureUnits(uniformType){switch(uniformType){case exports.UniformType.Sampler2D:return 1;case exports.UniformType.SamplerCube:return 1;default:return 0}}const array1dRegexp=/^([a-zA-Z_0-9]+)\[[0-9]+\]$/;class ProgramUniform{constructor(program,index){this.program=program;this.index=index;this.valueHashCode=0xda1fe4b380c9f80;this.textureUnit=-1;this.context=program.context;const gl=program.context.gl;{const activeInfo=gl.getActiveUniform(program.glProgram,index);if(activeInfo===null){throw new Error(`Can not find uniform with index: ${index}`)}const array1dMatch=activeInfo.name.match(array1dRegexp);if(array1dMatch!==null){this.name=array1dMatch[1];this.dimensions=1}else{this.name=activeInfo.name;this.dimensions=0}this.size=activeInfo.size;this.uniformType=activeInfo.type;const glLocation=gl.getUniformLocation(program.glProgram,this.name);if(glLocation===null){throw new Error(`can not find uniform named: ${this.name}`)}this.glLocation=glLocation}}set(value){const gl=this.context.gl;switch(this.uniformType){case exports.UniformType.Int:if(typeof value==="number"){if(value!==this.valueHashCode){gl.uniform1i(this.glLocation,value);this.valueHashCode=value}return this}if(value instanceof Array&&value.length>0&&typeof value[0]==="number"){gl.uniform1iv(this.glLocation,value);this.valueHashCode=-1;return this}break;case exports.UniformType.Float:if(typeof value==="number"){if(value!==this.valueHashCode){gl.uniform1f(this.glLocation,value);this.valueHashCode=value}return this}if(value instanceof Array&&value.length>0&&typeof value[0]==="number"){gl.uniform1fv(this.glLocation,value);this.valueHashCode=-1;return this}break;case exports.UniformType.FloatVec2:if(value instanceof Vector2){const hashCode=value.getHashCode();if(hashCode!==this.valueHashCode){gl.uniform2f(this.glLocation,value.x,value.y);this.valueHashCode=hashCode}return this}if(value instanceof Array&&value.length>0&&value[0]instanceof Vector2){const array=linearizeVector2FloatArray(value);gl.uniform2fv(this.glLocation,array);this.valueHashCode=-1;return this}break;case exports.UniformType.FloatVec3:if(value instanceof Vector3){const hashCode=value.getHashCode();if(hashCode!==this.valueHashCode){gl.uniform3f(this.glLocation,value.x,value.y,value.z);this.valueHashCode=hashCode}return this}if(value instanceof Array&&value.length>0&&value[0]instanceof Vector3){const array=linearizeVector3FloatArray(value);gl.uniform3fv(this.glLocation,array);this.valueHashCode=-1;return this}break;case exports.UniformType.FloatMat3:if(value instanceof Matrix3){const hashCode=value.getHashCode();if(hashCode!==this.valueHashCode){gl.uniformMatrix3fv(this.glLocation,false,value.elements);this.valueHashCode=hashCode}return this}if(value instanceof Array&&value.length>0&&value[0]instanceof Matrix4){const array=linearizeMatrix3FloatArray(value);gl.uniformMatrix4fv(this.glLocation,false,array);this.valueHashCode=-1;return this}break;case exports.UniformType.FloatMat4:if(value instanceof Matrix4){const hashCode=value.getHashCode();if(hashCode!==this.valueHashCode){gl.uniformMatrix4fv(this.glLocation,false,value.elements);this.valueHashCode=hashCode}return this}if(value instanceof Array&&value.length>0&&value[0]instanceof Matrix4){const array=linearizeMatrix4FloatArray(value);gl.uniformMatrix4fv(this.glLocation,false,array);this.valueHashCode=-1;return this}break;case exports.UniformType.Sampler2D:if(value instanceof TexImage2D){gl.activeTexture(GL.TEXTURE0+this.textureUnit);gl.bindTexture(GL.TEXTURE_2D,value.glTexture);gl.uniform1i(this.glLocation,this.textureUnit);return this}break;case exports.UniformType.SamplerCube:if(value instanceof TexImage2D){gl.activeTexture(GL.TEXTURE0+this.textureUnit);gl.bindTexture(GL.TEXTURE_CUBE_MAP,value.glTexture);gl.uniform1i(this.glLocation,this.textureUnit);return this}break}throw new Error(`unsupported uniform type - value mismatch: ${exports.UniformType[this.uniformType]}(${this.uniformType}) on '${this.name}'`)}}var __classPrivateFieldGet$1=undefined&&undefined.__classPrivateFieldGet||function(receiver,privateMap){if(!privateMap.has(receiver)){throw new TypeError("attempted to get private field on non-instance")}return privateMap.get(receiver)};var __classPrivateFieldSet$1=undefined&&undefined.__classPrivateFieldSet||function(receiver,privateMap,value){if(!privateMap.has(receiver)){throw new TypeError("attempted to set private field on non-instance")}privateMap.set(receiver,value);return value};var _validated$1,_uniformsInitialized,_uniforms,_attributesInitialized,_attributes;class Program{constructor(context,vertexShaderCode,fragmentShaderCode,glslVersion){this.context=context;this.disposed=false;_validated$1.set(this,false);_uniformsInitialized.set(this,false);_uniforms.set(this,{});_attributesInitialized.set(this,false);_attributes.set(this,{});this.vertexShader=new Shader(this.context,vertexShaderCode,ShaderType.Vertex,glslVersion);this.fragmentShader=new Shader(this.context,fragmentShaderCode,ShaderType.Fragment,glslVersion);const gl=this.context.gl;{const glProgram=gl.createProgram();if(glProgram===null){throw new Error("createProgram failed")}this.glProgram=glProgram}gl.attachShader(this.glProgram,this.vertexShader.glShader);gl.attachShader(this.glProgram,this.fragmentShader.glShader);gl.linkProgram(this.glProgram);this.id=this.context.registerResource(this)}validate(){if(__classPrivateFieldGet$1(this,_validated$1)||this.disposed){return true}const gl=this.context.gl;const psc=this.context.glxo.KHR_parallel_shader_compile;if(psc!==null){if(!gl.getProgramParameter(this.glProgram,psc.COMPLETION_STATUS_KHR)){return false}}if(!gl.getProgramParameter(this.glProgram,gl.LINK_STATUS)){this.vertexShader.validate();this.fragmentShader.validate();const infoLog=gl.getProgramInfoLog(this.glProgram);console.error(infoLog);this.vertexShader.dispose();this.fragmentShader.dispose();this.disposed=true;throw new Error(`program filed to link: ${infoLog}`)}__classPrivateFieldSet$1(this,_validated$1,true);return true}get uniforms(){if(!__classPrivateFieldGet$1(this,_uniformsInitialized)){let textureUnitCount=0;const gl=this.context.gl;const numActiveUniforms=gl.getProgramParameter(this.glProgram,gl.ACTIVE_UNIFORMS);for(let i=0;i<numActiveUniforms;++i){const uniform=new ProgramUniform(this,i);if(numTextureUnits(uniform.uniformType)>0){uniform.textureUnit=textureUnitCount;textureUnitCount++}__classPrivateFieldGet$1(this,_uniforms)[uniform.name]=uniform}__classPrivateFieldSet$1(this,_uniformsInitialized,true)}return __classPrivateFieldGet$1(this,_uniforms)}get attributes(){if(!__classPrivateFieldGet$1(this,_attributesInitialized)){const gl=this.context.gl;const numActiveAttributes=gl.getProgramParameter(this.glProgram,gl.ACTIVE_ATTRIBUTES);for(let i=0;i<numActiveAttributes;++i){const attribute=new ProgramAttribute(this,i);__classPrivateFieldGet$1(this,_attributes)[attribute.name]=attribute}__classPrivateFieldSet$1(this,_attributesInitialized,true)}return __classPrivateFieldGet$1(this,_attributes)}setUniformValues(uniformValueMap){this.context.program=this;for(const uniformName in uniformValueMap){const uniform=this.uniforms[uniformName];if(uniform!==undefined){uniform.set(uniformValueMap[uniformName])}}return this}setAttributeBuffers(buffers){const gl=this.context.gl;const glxVAO=this.context.glx.OES_vertex_array_object;if(buffers instanceof BufferGeometry){const bufferGeometry=buffers;for(const name in this.attributes){const attribute=this.attributes[name];const bufferAccessor=bufferGeometry.bufferAccessors[name];if(attribute!==undefined&&bufferAccessor!==undefined){attribute.setBuffer(bufferAccessor)}}if(bufferGeometry.indices!==undefined){gl.bindBuffer(bufferGeometry.indices.buffer.target,bufferGeometry.indices.buffer.glBuffer)}}else if(buffers instanceof VertexArrayObject){const vao=buffers;glxVAO.bindVertexArrayOES(vao.glVertexArrayObject)}else{throw new Error("not implemented")}return this}dispose(){if(!this.disposed){this.vertexShader.dispose();this.fragmentShader.dispose();this.context.gl.deleteProgram(this.glProgram);this.context.disposeResource(this);this.disposed=true}}}_validated$1=new WeakMap,_uniformsInitialized=new WeakMap,_uniforms=new WeakMap,_attributesInitialized=new WeakMap,_attributes=new WeakMap;function makeProgramFromShaderMaterial(context,shaderMaterial){return new Program(context,shaderMaterial.vertexShaderCode,shaderMaterial.fragmentShaderCode,shaderMaterial.glslVersion)}class ProgramPool extends Pool{constructor(context){super(context,(context,shaderCodeMaterial,program)=>{if(program!==undefined){program.dispose()}return makeProgramFromShaderMaterial(context,shaderCodeMaterial)})}}exports.Program=Program;exports.ProgramAttribute=ProgramAttribute;exports.ProgramPool=ProgramPool;exports.ProgramUniform=ProgramUniform;exports.makeProgramFromShaderMaterial=makeProgramFromShaderMaterial;exports.numTextureUnits=numTextureUnits;return exports})({});